compose.yml - OLD FILE
-----------------------
services:
  flask-app:
    build: .
    environment:
      - FLASK_ENV=production
    env_file:
      - .env  # Load environment variables from the .env file
    deploy:
      resources:
        limits:
          cpus: "3"  # Utilize more CPU resources
          memory: 3G  # Increase memory allocation
      restart_policy:
        condition: on-failure
    ports:
      - "8000:8000"  # Bind the container port to the host port
    command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker all_routes:app --bind 0.0.0.0:8000 --timeout 600


Dockerfile
-----------
# Use the official Python image from the Docker Hub
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install necessary packages
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Make port 8000 available to the world outside this container
EXPOSE 8000

# Run Gunicorn with Uvicorn workers
CMD ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "all_routes:app", "--bind", "0.0.0.0:8000"]
